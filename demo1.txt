mkdir my-first-project
cd my-first-project
echo "This is my first Git project" > notes.txt
git status
git add .
git commit -m "Initial commit"
git remote add origin https://github.com/username/my-first-project.git
git remote -v
git branch -M main
git push -u origin main

git branch feature-login
git checkout feature-login
echo "text" > login.html
git add .
git commit -m "message"
git push -u origin feature-login
git checkout main
git merge feature-login
git push origin main
//////////////////////////////////////////////////////////////////////////////////////

if-fi 

Name="Girish"
if [ "$Name" = "Girish" ]; then
  echo "His name is Girish. It is true."
fi

====================
if-else-fi 
====================
Age=17
if [ "$Age" -ge 18 ]; then
    echo "You can vote"
else
    echo "You cannot vote"    
fi

====================
if-elif-else-fi 
====================

Age=17
if [ "$Age" -ge 18 ]; then
    echo "You can vote"
elif [ "$Age" -eq 17 ]; then
    echo "You can vote after one year"
else
    echo "You cannot vote"    
fi

====================
Nested if-else
====================

echo "Enter subject"
read subject

if [ $subject == 'Linux' ]
then
echo "Enter Marks"
read marks
        if [ $marks -ge 30 ]
        then
        echo "You passed"
        else
        echo "You failed"
        fi
else
echo "Wrong Subject"
fi/////////////////////////////////////////////////////////////////////////////////////////////////
====================================
#/bin/bash

a=0

# lt is less than operator

#Iterate the loop until a less than 10

while [ $a -lt 10 ]
do
# Print the values
echo $a
# increment the value
a=`expr $a + 1`
done


=============================

#/bin/bash

a=0

# -gt is greater than operator
#Iterate the loop until a is greater than 10

until [ $a -gt 10 ]
do

# Print the values
echo $a

# increment the value
a=`expr $a + 1`
done

==================
Implementation of `for` Loop with `break` statement in Shell Script.

#/bin/bash

#Start of for loop

for a in 1 2 3 4 5 6 7 8 9 10
do

# if a is equal to 5 break the loop
if [ $a == 5 ]
then
break
fi

# Print the value
echo “Iteration no $a”
done

==================

Implementation of `for` Loop with `continue` statement in Shell Script.

#/bin/bash

for a in 1 2 3 4 5 6 7 8 9 10
do

# if a = 5 then continue the loop and
# don’t move to line 8

if [ $a == 5 ]
then
continue
fi
echo “Iteration no $a”
done


====================
Implementing `until` Loop in Shell Script

#/bin/bash

a=0

# -gt is greater than operator
#Iterate the loop until a is greater than 10

until [ $a -gt 10 ]
do


=======================
Creating an Infinite Loop with “while true” in Shell Script

#/bin/bash

while true
do

# Command to be executed
# sleep 1 indicates it sleeps for 1 sec
echo “Hi, I am infinity loop”
sleep 1
done
======================================
FACTORIAL OF A  NUMBER 

#!/bin/bash
echo "Enter a number:"
read n
fact=1

for (( i=1; i<=n; i++ ))
do
  fact=$((fact * i))
done

echo "Factorial of $n is $fact"


FIBONACCI SERIES

#!/bin/bash
echo "Enter the number of terms:"
read n

a=0
b=1

echo "Fibonacci Series:"
for (( i=0; i<n; i++ ))
do
  echo -n "$a "
  fn=$((a + b))
  a=$b
  b=$fn
done
echo


SUM OF TWO NUMBERS 

#!/bin/bash
echo "Enter first number:"
read a
echo "Enter second number:"
read b

sum=$((a + b))
echo "Sum is: $sum"


LARGEST OF THREE NUMBERS

#!/bin/bash
echo "Enter three numbers:"
read a b c

if [ $a -ge $b ] && [ $a -ge $c ]
then
  echo "$a is the largest"
elif [ $b -ge $a ] && [ $b -ge $c ]
then
  echo "$b is the largest"
else
  echo "$c is the largest"
fi


CHECK EVEN OR ODD

#!/bin/bash
echo "Enter a number:"
read n

if (( n % 2 == 0 ))
then
  echo "$n is Even"
else
  echo "$n is Odd"
fi

REVERSE A NUMBER 

#!/bin/bash
echo "Enter a number:"
read n

rev=0
while [ $n -gt 0 ]
do
  rem=$((n % 10))
  rev=$((rev * 10 + rem))
  n=$((n / 10))
done

echo "Reversed number is $rev"